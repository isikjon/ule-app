#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
"""

from app.database import create_tables, get_db
from app.auth.service import hash_password, format_russian_phone

def create_test_user():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print("üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    create_tables()
    
    test_phone = "+7 (999) 123-45-67"
    test_password = "123456"
    test_name = "–¢–µ—Å—Ç –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    test_city = "–ë–∏—à–∫–µ–∫"
    
    formatted_phone = format_russian_phone(test_phone)
    password_hash = hash_password(test_password)
    
    print(f"–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print(f"–¢–µ–ª–µ—Ñ–æ–Ω: {formatted_phone}")
    print(f"–ü–∞—Ä–æ–ª—å: {test_password}")
    print(f"–ò–º—è: {test_name}")
    print(f"–ì–æ—Ä–æ–¥: {test_city}")
    
    with get_db() as conn:
        cursor = conn.cursor()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        cursor.execute("SELECT id FROM users WHERE phone = ?", (formatted_phone,))
        existing_user = cursor.fetchone()
        
        if existing_user:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {formatted_phone}")
            return
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        cursor.execute("""
            INSERT INTO users (phone, password_hash, name, city, role, created_at, updated_at)
            VALUES (?, ?, ?, ?, 'customer', CURRENT_TIMESTAMP, CURRENT_TIMESTAMP)
        """, (formatted_phone, password_hash, test_name, test_city))
        
        user_id = cursor.lastrowid
        conn.commit()
        
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
        print(f"User ID: {user_id}")
        print(f"–î–ª—è –≤—Ö–æ–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:")
        print(f"  –¢–µ–ª–µ—Ñ–æ–Ω: {test_phone}")
        print(f"  –ü–∞—Ä–æ–ª—å: {test_password}")

if __name__ == "__main__":
    create_test_user()
